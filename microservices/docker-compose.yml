#version: "3.9"
services:

  postgres:
    container_name: postgres_db
    image: postgres
    restart: always
    ports:
      - "5433:5432" # Mapear el puerto 5433 de la máquina host al puerto 5432 del contenedor
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_MAX_CONNECTIONS=200
    #      - DATABASE_HOST=127.0.0.1
    #      - POSTGRES_URL=${POSTGRES_DOCKER_URL}
    #    expose:
    #      - 5433
    #    command: -p 5433
    volumes:
      - postgres-volume:/var/lib/postgresql/data  # Ruta correcta para los datos de PostgreSQL
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - 'stockSuite-network'

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_DATABASE_CONNECTIONS: "true"
    ports:
      - "80:80"
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - 'stockSuite-network'
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  mysql:
    image: mysql
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: stocksuite
      MYSQL_USER: crishof
      MYSQL_PASSWORD: root1234
    ports:
      - "3307:3306"  # Mapea el puerto 3307 en la máquina host al puerto 3306 en el contenedor
    #    expose:
    #      - "3307"
    networks:
      - 'stockSuite-network'
    volumes:
      - mysql-volume:/var/lib/mysql

  eureka-sv:
    container_name: eureka-sv
    build: eureka-sv
    mem_limit: 512m
    ports:
      - "8761:8761"
    networks:
      - 'stockSuite-network'

  api-gateway:
    container_name: api-gateway
    build: api-gateway
    #    network_mode: host
    mem_limit: 512m
    ports:
      - "443:443"
    networks:
      - 'stockSuite-network'

  image-sv:
    build: image-sv
    environment:
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "9005:9005"
    networks:
      - 'stockSuite-network'

  supplierpricelist-sv:
    build: supplierPriceList-sv
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_USER=${SUPABASE_USER}
      - SUPABASE_PASSWORD=${SUPABASE_PASSWORD}
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "9007:9007"
    networks:
      - 'stockSuite-network'


networks:
  stockSuite-network:
#    driver: bridge
volumes:
  mysql-volume:
  postgres-volume:
  pgadmin-data:

#
#  config-server:
#    build: config-server
#    deploy:
#      resources:
#        limits:
#          memory: 512M
#    ports:
#      - "8081:8081"
#    networks:
#      - 'stockSuite-network'


#  product-sv:
#    build: product-sv
#    deploy:
#      resources:
#        limits:
#          memory: 512M
#    ports:
#      - "9001:9001"
#    networks:
#      - 'stockSuite-network'

#  brand-sv:
#    build: brand-sv
#    deploy:
#      resources:
#        limits:
#          memory: 512M
#    ports:
#      - "9002:9002"
#    networks:
#      - 'stockSuite-network'

#  category-sv:
#    build: category-sv
#    deploy:
#      resources:
#        limits:
#          memory: 512M
#    ports:
#      - "9003:9003"
#    networks:
#      - 'stockSuite-network'